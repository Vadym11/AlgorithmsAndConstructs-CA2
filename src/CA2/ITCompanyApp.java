package CA2;

import CA2.constants.MenuOption;

import java.util.Scanner;

public class ITCompanyApp {

    public static void main(String[] args) {
        try {
            Scanner sc = new Scanner(System.in);
            String fileName = Utils.getEmployeesFileName();

            System.out.println("Please enter company name:");
            String companyName = sc.nextLine().toUpperCase();
            String returnMessage = String.format("You entered 0. Returning to %s company main menu...\n", companyName);

            ITCompany company = new ITCompany(companyName, "Vadym Tymeichuk");
            company.writeAllEmployeesToFile();
            System.out.println("Company employees and managers have been autogenerated and written to file " + fileName);
            int userChoice;

            do {
                System.out.printf("\n---- %s Company Menu ----\n", companyName);
                for (MenuOption option : MenuOption.values()) {
                    System.out.println(option.getDescription());
                }

                System.out.print("Enter your choice: ");
                while (!sc.hasNextInt()) {
                    System.out.println("Invalid input! Please enter a number.");
                    sc.next();
                    System.out.print("Enter your choice: ");
                }

                userChoice = sc.nextInt();
                MenuOption selectedOption = MenuOption.fromCode(userChoice);

                if (selectedOption == null) {
                    System.out.println("Invalid choice, please enter a number from 1 to 4.");
                    continue;
                }

                switch (selectedOption) {
                    case SORT -> {
                        System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                        sc.nextLine(); // clear scanner
                        System.out.printf("What would you like to sort? Enter 1 for %s company employees or 2 for APPLICANTS file.\n",
                                companyName);

                        userChoice = Utils.getUserChoice(sc);

                        if (userChoice == 0) {
                            System.out.println(returnMessage);
                        } else if (userChoice == 1) {
                            System.out.printf("First 20 records of %s company employees sorted by first name:\n", companyName);
                            company.printSortedEmployeesInfo(company.getCompanyEmployeesInfoSorted());
                        } else {
                            System.out.println("First 20 records of APPLICANTS file sorted by first name:");
                            Utils.sortAndPrintApplicantsFile(20, 0);
                        }
                    }
                    case SEARCH -> {
                        sc.nextLine();
                        System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                        System.out.printf("What would you like to search? Enter 1 for %s company employees or 2 for APPLICANTS file.\n",
                                companyName.toUpperCase());

                        userChoice = Utils.getUserChoice(sc);

                        if (userChoice == 0) {
                            System.out.println(returnMessage);
                            break;
                        }

                        System.out.println("To search by First Name - enter 1, by Last Name - enter 2:");
                        int sortOption = Utils.getUserChoice(sc) - 1;

                        if (sortOption == -1) {
                            System.out.println(returnMessage);
                            break;
                        }

                        System.out.print("Enter your search query (case insensitive): ");
                        String query = sc.nextLine();

                        if (query.equals("0")) {
                            System.out.println(returnMessage);
                            break;
                        }

                        if (userChoice == 1) {
                            company.searchEmployee(company.getCompanyEmployeesInfoSorted(), query.toLowerCase(), sortOption);
                        } else {
                            Utils.searchAndPrintApplicants(query.toLowerCase(), sortOption);
                        }
                    }
                    case ADD -> {
                        System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                        company.addEmployeeToDepartment(sc);
                    }
                    case EXIT -> System.out.println("Exiting...");
                }
            } while (userChoice != MenuOption.EXIT.getCode());

            sc.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
}
