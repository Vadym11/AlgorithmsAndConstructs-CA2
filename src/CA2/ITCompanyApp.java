package CA2;

import CA2.constants.MenuOption;

import java.util.Scanner;

public class ITCompanyApp {

    public static void main(String[] args) {
        try {
            Scanner sc = new Scanner(System.in);
            String fileName = Utils.getEmployeesFileName();
            boolean employeesWrittenToFiles = false;

            System.out.println("Please enter company name:");
            String companyName = sc.nextLine();
            ITCompany company = new ITCompany(companyName);
            System.out.println("Company employees and managers have been autogenerated.");
            System.out.print("Would you like to write all of them to a file? Enter 1 for YES, or 2 for NO: ");
            int userChoice = Utils.getUserChoice(sc);

            if (userChoice == 1) {
                company.writeAllEmployeesToFile();
                employeesWrittenToFiles = true;
            } else {
                System.out.println("Employees have not been written to a file.");
            }

            do {
                System.out.printf("\n---- %s Company Menu ----\n", companyName);
                for (MenuOption option : MenuOption.values()) {
                    System.out.println(option.getDescription());
                }

                System.out.print("Enter your choice: ");
                while (!sc.hasNextInt()) {
                    System.out.println("Invalid input! Please enter a number.");
                    sc.next();
                    System.out.print("Enter your choice: ");
                }

                userChoice = sc.nextInt();
                MenuOption selectedOption = MenuOption.fromCode(userChoice);

                if (selectedOption == null) {
                    System.out.println("Invalid choice, please enter a number from 1 to 4.");
                    continue;
                }

                switch (selectedOption) {
                    case SORT -> {
                        sc.nextLine(); // clear scanner
                        System.out.println("Which file would you like to sort? Enter 1 for EMPLOYEE file or 2 for APPLICANTS file?");
                        if (!employeesWrittenToFiles) {
                            System.out.printf("If you enter 1 %s file will be created and all employees will be written to it.\n",
                                    fileName);
                        }

                        userChoice = Utils.getUserChoice(sc);

                        if (userChoice == 1) {
                            if (!employeesWrittenToFiles) {
                                System.out.println("Writing all " + companyName + " Company employees to" + fileName + " file ...");
                                company.writeAllEmployeesToFile();
                            }
                            company.sortAndPrintEmployees();
                        } else {
                            Utils.sortAndPrintApplicantsFile(20, 0);
                        }
                    }
                    case SEARCH -> {
                        sc.nextLine();
                        System.out.println("Which file would you like to search? Enter 1 for EMPLOYEE file or 2 for APPLICANTS file?");
                        if (!employeesWrittenToFiles) {
                            System.out.printf("If you enter 1 %s file will be created and all employees will be written to it.\n",
                                    fileName);
                        }

                        userChoice = Utils.getUserChoice(sc);
                        System.out.println("To search by First Name - enter 1, by Last Name - enter 2:");
                        int sortOption = Utils.getUserChoice(sc) - 1;
                        System.out.print("Enter your search query: ");
                        String query = sc.nextLine();

                        if (userChoice == 1) {
                            if (!employeesWrittenToFiles) {
                                System.out.println("Writing all " + companyName + " Company employees to " + fileName + "file ...");
                                company.writeAllEmployeesToFile();
                                employeesWrittenToFiles = true;
                            }
                            company.searchEmployee(query, sortOption);
                        } else {
                            Utils.searchAndPrintApplicants(query, sortOption);
                        }
                    }
                    case ADD -> {
                        if (!employeesWrittenToFiles) {
                            System.out.printf("All autogenerated employees have been written to %s file.\n", fileName);
                            company.writeAllEmployeesToFile();
                        }
                        company.addEmployeeToDepartment(sc);
                    }
                    case EXIT -> System.out.println("Exiting...");
                }
            } while (userChoice != MenuOption.EXIT.getCode());

            sc.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
}
