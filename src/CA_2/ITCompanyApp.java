package CA_2;

import java.util.Scanner;

public class ITCompanyApp {

    public static void main(String[] args) {
        // the main app code is wrapped in try-catch
        try {
            // get a filename of the file for employee records
            String fileName = Utils.getEmployeesFileName();
            // declare variable for user input
            int userChoice;

            // get company name from user input
            System.out.println("Please enter company name:");
            Scanner sc = new Scanner(System.in);
            String companyName = sc.nextLine().toUpperCase();
            // message to display if user enter 0 to return to main menu
            String returnMessage = String.format("You entered 0. Returning to %s company main menu...\n", companyName);

            // initialize company (an instance of the ITCompany class)
            ITCompany company = new ITCompany(companyName, "Vadym Tymeichuk");
            company.writeAllEmployeesToFile();
            System.out.println("Company employees and managers have been autogenerated and written to file " + fileName);

            // start of the do-while block
            do {
                // print out main menu header and menu options using MenuOption enum
                System.out.printf("\n---- %s Company Menu ----\n", companyName);
                for (MenuOption option : MenuOption.values()) {
                    System.out.println(option.getDescription());
                }

                    // message to print as long as user input is not integer'
                    System.out.print("Enter your choice: ");
                    while (!sc.hasNextInt()) {
                        System.out.println("Invalid input! Please enter a number.");
                        sc.next();
                        System.out.print("Enter your choice: ");
                    }

                    // read user integer input and get menu option based on the input
                    userChoice = sc.nextInt();
                    MenuOption selectedOption = MenuOption.fromCode(userChoice);

                    // message to print as long as user input doesn't match menu options'
                    if (selectedOption == null) {
                        System.out.println("Invalid choice, please enter a number from 1 to 4.");
                        continue;
                    }

                    // switch-case clause start
                    switch (selectedOption) {
                        case SORT -> {
                            System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                            sc.nextLine(); // clear scanner
                            System.out.printf("What would you like to sort? Enter 1 for %s company employees or 2 for APPLICANTS file.\n",
                                    companyName);
                            // get user input using utility method
                            userChoice = Utils.getUserChoice(sc);

                            if (userChoice == 0) { // returns to main menu if 0 is entered
                                System.out.println(returnMessage);
                            } else if (userChoice == 1) { // display 20 sorted employee records if 1 entered
                                System.out.printf("First 20 records of %s company employees sorted by first name:\n", companyName);
                                company.printSortedEmployeesInfo(company.getCompanyEmployeesInfoSorted());
                            } else { // display 20 sorted records from Applicants_Form.txt file otherwise
                                System.out.println("First 20 records of APPLICANTS file sorted by first name:");
                                Utils.sortAndPrintApplicantsFile(20, 0);
                            }
                        }
                        case SEARCH -> {
                            sc.nextLine(); // clear scanner
                            System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                            System.out.printf("What would you like to search? Enter 1 for %s company employees or 2 for APPLICANTS file.\n",
                                    companyName.toUpperCase());

                            // get user input using utility method
                            userChoice = Utils.getUserChoice(sc);

                            // return to main menu if 0 is entered
                            if (userChoice == 0) {
                                System.out.println(returnMessage);
                                break;
                            }

                            // prompt user to enter search option
                            System.out.println("To search by First Name - enter 1, by Last Name - enter 2:");
                            int sortOption = Utils.getUserChoice(sc) - 1;

                            // return to main menu if 0 is entered
                            if (sortOption == -1) {
                                System.out.println(returnMessage);
                                break;
                            }

                            // get user to enter search query
                            System.out.print("Enter your search query (case insensitive): ");
                            String query = sc.nextLine();

                            // return to main menu is 0 is entered
                            if (query.equals("0")) {
                                System.out.println(returnMessage);
                                break;
                            }

                            // perform search on the company employees or Applicants_Form.txt file
                            // depending on user choice of first or last name
                            if (userChoice == 1) {
                                company.searchEmployee(company.getCompanyEmployeesInfoSorted(), query.toLowerCase(), sortOption);
                            } else {
                                Utils.searchAndPrintApplicants(query.toLowerCase(), sortOption);
                            }
                        }
                        case ADD -> {
                            // add an employee to company employees list
                            System.out.println("\nTo return to MAIN MENU enter 0 at any time.\n");
                            company.addEmployeeToDepartment(sc);
                        }
                        case EXIT -> System.out.println("Exiting...");
                    }
                    // continue the loop until 4 is entered
                } while (userChoice != MenuOption.EXIT.getCode());

                sc.close(); // close scanner
                // catch any unhandled previously exceptions
            } catch (Exception e) {
                System.out.println(e.getMessage());
                e.printStackTrace();
            }
        }
    }
